#name: deploy
#on:
#  workflow_call:
#env:
#  MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
#  # file, e.g. .aws/task-definition-dev.json
#  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
#  # containerDefinitions section of your task definition
#
#jobs:
#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    environment: ${{ env.environment }}
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v4
#      - name: Login AWS 🔐
#        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#      - name: Login ECR 🔓
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
#      - name: Build Image 📸
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
#      - name: Task Definition 📋
#        id: task-def
#        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
#        with:
#          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}
#          container-name: ${{ secrets.CONTAINER_NAME }}
#          image: ${{ steps.build-image.outputs.image }}
#      - name: Deploy 🚀
#        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
#        with:
#          task-definition: ${{ steps.task-def.outputs.task-definition }}
#          service: {{ github.event.repository.name }}
#          cluster: ${{ secrets.ECS_CLUSTER }}
#          wait-for-service-stability: true